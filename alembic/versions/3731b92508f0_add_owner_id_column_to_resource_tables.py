"""Add owner_id column to resource tables

Revision ID: 3731b92508f0
Revises: 45af6cfd4fa9
Create Date: 2025-01-16 15:11:36.530389

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3731b92508f0'
down_revision: Union[str, None] = '45af6cfd4fa9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('buildings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_buildings_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    with op.batch_alter_table('insurances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_insurances_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    with op.batch_alter_table('leases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_leases_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_properties_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_tenants_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_units_owner_id'), ['owner_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.drop_constraint('fk_units_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_units_owner_id'))
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tenants_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_tenants_owner_id'))
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.drop_constraint('fk_properties_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_properties_owner_id'))
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('leases', schema=None) as batch_op:
        batch_op.drop_constraint('fk_leases_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_leases_owner_id'))
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('insurances', schema=None) as batch_op:
        batch_op.drop_constraint('fk_insurances_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_insurances_owner_id'))
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('buildings', schema=None) as batch_op:
        batch_op.drop_constraint('fk_buildings_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_buildings_owner_id'))
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###
